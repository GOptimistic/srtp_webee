package edu.umn.minds.testinjection;

import android.os.Environment;
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;
import android.widget.ImageView;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class MainActivity extends AppCompatActivity {

    private boolean running;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        prepareInjectionProgram();

        Button btn = (Button)findViewById(R.id.button);
        btn.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View v) {
                CmdThread thread = new CmdThread();
                running = true;
                thread.start();
                ImageView lemp =(ImageView)findViewById(R.id.light);
                lemp.setImageResource(R.drawable.light_light);
            }
        });

        Button btn2 = (Button)findViewById(R.id.button2);
        btn2.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View v) {
              running = false;
                ImageView lemp =(ImageView)findViewById(R.id.light);
                lemp.setImageResource(R.drawable.light_dark);
            }
        });


        int REQUEST_CODE = 0x11;

        String[] permissions = {"android.permission.READ_EXTERNAL_STORAGE"};
        ActivityCompat.requestPermissions(this, permissions, REQUEST_CODE);

        running = false;
    }

    /**
     *  Copy aireplay-ng from sdcard to /mnt
     *  and set the execution permission
     */
    private void prepareInjectionProgram(){
        try {
            String[] cmd_cp = {"su", "-c", "cp /sdcard/webee/aireplay-ng-color /mnt"};
            Runtime.getRuntime().exec(cmd_cp);
            String[] cmd_chmod = {"su", "-c", "chmod 777 /mnt/aireplay-ng-color"};
            Runtime.getRuntime().exec(cmd_chmod);

            String[] cmd_cp2 = {"su", "-c", "cp /sdcard/webee/aireplay-ng-color-old /mnt"};
            Runtime.getRuntime().exec(cmd_cp2);
            String[] cmd_chmod2 = {"su", "-c", "chmod 777 /mnt/aireplay-ng-color-old"};
            Runtime.getRuntime().exec(cmd_chmod2);

        }catch (Exception e){
            e.printStackTrace();
            Toast.makeText(MainActivity.this,"Initialization Failed",Toast.LENGTH_SHORT).show();
        }
    }


    private class CmdThread extends Thread{

        int m_colorIndex;
        int m_id;
        boolean m_status;

        public CmdThread(){
            m_id = 0;
            m_status = true;
            m_colorIndex = 0;
        }
        @Override
        public void run() {
            //xmitCmd(m_colorIndex);
            //enable wlan inteface
            try {
                String[] cmd_interface_up = {"su", "-c", "ifconfig wlan0 up && iwconfig wlan0 channel 11 && chmod 777 /mnt/aireplay-ng-color"};
                Process process = Runtime.getRuntime().exec(cmd_interface_up);

                process.getInputStream().close();
                process.getOutputStream().close();
                process.getErrorStream().close();
                process.waitFor();
                process.destroy();
            }catch (Exception e) {
                e.printStackTrace();
            }
             for(m_id = 3; m_id < 6 ; m_id++){
               /* for(m_colorIndex =0 ; m_colorIndex < 64; m_colorIndex++) {
                    m_status = true;
                    if( !xmitCmd(m_id, m_status, m_colorIndex)){
                        return;
                    }
                    m_status = false;
                    if (!xmitCmd(m_id, m_status, m_colorIndex)){
                        return;
                    }
                    if(running == false){
                        return;
                    }
                }*/
                 for(int secondByte = 0; secondByte < 255; secondByte++){
                     xmitCmd(m_id,secondByte);
                     try {
                         sleep(2000);
                     } catch (InterruptedException e) {
                         e.printStackTrace();
                     }
                     if(running == false)
                         return;
                 }
            }

     /*       while(running){
                xmitCmd(0x01, true, 48);
              //  xmitCmd(60);
            }*/

        }
    }

    //private String cmd_00C0 = "\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\x34\\x09\\x44\\x46\\xD7\\x06\\xB3\\x72\\xDE\\x42\\xF5\\xA5\\xD8\\xF2\\xB4\\x1A\\xAB\\x42\\x42\\x89\\x68\\x12\\x70\\x7B\\xE6\\x33\\xEE\\x2E\\x2C\\xDE\\xCA\\x17\\x0F\\x20\\xB1\\x5B\\xA9\\xD1\\x1C\\x9E\\x9C\\xC2\\x7D\\x88\\x36\\xBC\\xC3\\x1F\\x87\\x99\\x57\\x70\\x4C\\x74\\x12\\xCE\\x59\\x87\\x8C\\x32\\x3D\\xFC\\xFA\\x53\\x2B\\x50\\x6C\\x74\\x5E\\x10\\xF2\\xE5\\x49\\xDE\\xDE\\x0A\\x30\\xA0\\x31\\x35\\xFC\\xDC\\xE8\\xDA\\x19\\xB0\\x73\\xF1\\x17\\xB8\\x3F\\xF3\\x9E\\x35\\xDD\\xE2\\x65\\xD1\\x19\\x19\\x10\\xCE\\x52\\x74\\x15\\x55\\x01\\xC5\\x6F\\x0D\\xAA\\xEF\\x38\\x4C\\xAF\\x9E\\x95\\x62\\x77\\x0D\\x84\\xE9\\x78\\xD0\\xD2\\x49\\x97\\x1E\\x0A\\xD5\\x6F\\x95\\x8F\\x21\\x66\\xA2\\x82\\xD3\\xAC\\xF2\\xB3\\xA5\\x5B\\x10\\x18\\x32\\x13\\x69\\xA8\\xCB\\x39\\xCE\\xE1\\xBA\\x70\\x6D\\x59\\xDB\\xA2\\xD5\\x94\\x85\\x95\\xB5\\xC3\\x83\\xAE\\x91\\x56\\x7F\\xA3\\x6A\\x44\\xF1\\x96\\x26\\xB2\\xE8\\x31\\xD8\\x04\\xDC\\x4F\\xDB\\x85\\x61\\x9D\\xA9\\x4B\\x8C\\x95\\xF3\\x6F\\x4C\\x92\\x6F\\x31\\x39\\xF7\\x1B\\x44\\x55\\x8B\\x2C\\x3E\\x79\\xA7\\x0D\\x2B\\x30\\x22\\x3B\\x86\\x15\\x65\\xB1\\x02\\x3D\\x81\\x08\\x15\\x18\\xF0\\x14\\x88\\x1D\\xCF\\xAA\\xCD\\xC9\\x4A\\x6A\\xE4\\xD1\\x02\\xED\\x1C\\x7F\\x40\\x50\\x01\\x1E\\xBA\\x71\\xA6\\xC3\\xB5\\xAF\\xA8\\x69\\x91\\x69\\x13\\xE7\\x84\\x0B\\x6F\\xD4\\xD7\\xA7\\xF3\\x32\\xFC\\xC3\\x54\\xBD\\x47\\x69\\x11\\x6F\\xDE\\x04\\x20\\x8C\\x59\\xA5\\x5F\\x3B\\xE5\\xBD\\x42\\x42\\xE4\\xF8\\xF0\\x1D\\x94\\x00\\xF5\\x5B\\x34\\x41\\x81\\x43\\x3E\\xC2\\xC8\\xD5\\xAC\\x9C\\xCE\\xB6\\xC0\\x83\\xC9\\xFA\\xCA\\x56\\x46\\xC4\\x5A\\x99\\xFF\\xD5\\x3B\\xBA\\x7B\\x4D\\x0B\\x4D\\x7A\\xF4\\xFB\\x97\\x83\\xF5\\x69\\xD2\\x75\\x4E\\x3E\\x4F\\x20\\xA3\\xDB\\x91\\x33\\xB9\\x05\\xF9\\xA4\\xB5\\x76\\x80\\x2C\\x54\\xA7\\x7D\\x55\\x41\\x30\\x6C\\xD9\\x7B\\x12\\xE6\\x88\\x5B\\x2B\\x5F\\x8B\\x72\\x77\\x1D\\xC5\\xFB\\x12\\x29\\xCC\\xEE\\x2F\\xE7\\x44\\xA4\\x1A\\x72\\xDD\\xA5\\xA7\\x0F\\xF5\\x1B\\x3B\\x62\\x40\\xD5\\x8C\\xAF\\xCA\\xCE\\x4A\\xF5\\x96\\xF8\\x28\\x85\\x1F\\x10\\x85\\xA2\\x8E\\xB4\\x0A\\xCB\\x8C\\x93\\x7B\\x9A\\x7D\\xC4\\x1E\\xC1\\x3C\\x5F\\x12\\xA7\\xC1\\xBF\\xC0\\x9D\\xDD\\x76\\x50\\x39\\x22\\x74\\x64\\xEC\\x80\\xA6\\x17\\x6F\\x40\\xC8\\x24\\xD0\\xE4\\x9F\\x8B\\x8E\\x8C\\x3F\\x6C\\xC1\\x4E\\x90\\x73\\x05\\x45\\x2B\\x50\\x01\\xE4\\xBC\\x7D\\x1D\\x03\\x8F\\x6B\\xC4\\x67\\x6F\\x29\\x18\\xF8\\x14\\xB8\\x1F\\xEF\\x06\\x1A\\x2D\\xEE\\x1C\\x3F\\x7D\\x93\\x64\\x32\\x98\\xFC\\x03\\x53\\x52\\xEF\\x1F\\x91\\x97\\x60\\xE8\\x2D\\xC8\\x6F\\x10\\x02\\x90\\x16\\x1D\\x6E\\xE5\\x8F\\xA5\\x33\\x49\\xD5\\x69\\x8E\\x77\\x19\\xD6\\xCD\\xD4\\x62\\xFA\\x69\\x12\\xF1\\x6A\\x13\\xA7\\xD9\\xE3\\x97\\x4D\\x8A\\x0E\\x23\\x92\\x2A\\x42\\x59\\x7D\\x64\\xA3\\x62\\x5F\\xF2\\x78\\x55\\x9A\\xE5\\x10\\xD5\\x57\\x9F\\x05\\x8F\\xAC\\x2F\\x54\\xEF\\x98\\x77\\xFF\\xD2\\xFF\\x17\\xC7\\xA8\\xC2\\xD9\\xF1\\x7F\\x8C\\xD2\\x3A\\xAA\\x68\\xFB\\xD8\\x79\\x65\\xD1\\x62\\x44\\xFE\\x71\\x20\\x9B\\xE5\\x06\\xC6\\x5F\\x2B\\x5D\\x3F\\x9A\\x26\\xE8\\x38\\xAD\\x22\\xA0\\x8C\\xD1\\xF3\\x14\\x85\\x1D\\xE3\\x88\\x3D\\x56\\xCF\\x9C\\x00\\x11\\x5D\\x28\\xEC\\x13\\x7B\\x6F\\x5F\\x16\\xE2\\xEA\\xC0\\x67\\xFB\\xA7\\x74\\x56\\xCE\\x22\\x4E\\x03\\xBE\\x84\\xF8\\x5B\\x87\\xF3\\x05\\xF6\\x05\\x48\\x85\\x46\\x93\\x0D\\xB1\\xEA\\xD3\\x5C\\x75\\x33\\x7F\\x59\\x95\\x3F\\x1C\\x2E\\xE6\\x80\\x5B\\x1B\\x5D\\xAB\\xDE\\xA0\\xD1\\x42\\xEC\\x09\\x83\\x09\\x6E\\x01\\x20\\xD9\\xF6\\x50\\x2E\\x9C\\x6B\\x58\\x3F\\x0D\\x44\\x5E\\xE1\\x3F\\xBE\\x91\\xC2\\xF8\\xD2\\x60\\x57\\xEE\\x71\\xAE\\x8E\\x3F\\xBA\\xF7\\x74\\x53\\x0B\\x42\\xC3\\x4E\\x7F\\x34\\x20\\xC7\\xA9\\x77\\xDF\\x8A\\x39\\x4B\\x08\\xA5\\x4B\\x11\\x53\\x0B\\x34\\xFC\\x15\\x32\\xBE\\x82\\x37\\x45\\x88\\x98\\x80\\xD3\\x26\\xB1\\x3B\\x5B\\x3C\\xCB\\x40\\x45\\x2B\\x65\\x96\\x40\\xC7\\x3F\\xAE\\x6D\\xD6\\x8B\\xCE\\x17\\x11\\xEE\\x65\\xBE\\x25\\x68\\x53\\xF5\\x41\\x27\\xF7\\x34\\x18\\x56\\x56\\x6F\\xB7\\xB3\\x50\\x6C\\x42\\xFD\\xE1\\x4C\\xF0\\xC5\\x6A\\xAA\\xC2\\xB3\\xB1\\xCB\\xCD\\x9B\\x5F\\x6F\\x81\\x7C\\x70\\xD8\\x72\\xEB\\xBB\\x5D\\x08\\x98\\xE0\\xF4\\x58\\xAC\\x8C\\x37\\x53\\x75\\x39\\x2B\\x75\\x63\\x2B\\x04\\x8B\\x8A\\xE2\\xE0\\xE6\\x51\\x4C\\xC3\\xAC\\x24\\xA4\\x3B\\xD5\\x60\\x6F\\xCA\\x06\\x24\\xD5\\x2F\\x39\\x0F\\x30\\xBC\\xC6\\x4C\\x22\\xC5\\x1F\\x1B\\x95\\x8F\\x04\\x31\\xA8\\x0A\\x00\\x25\\xF1\\x36\\x9A\\x6E\\x95\\x8A\\x0F\\x7E\\xD3\\x9C\\x28\\x17\\xC5\\x9D\\x7F\\x8E\\xBB\\x6D\\xDE\\x97\\x46\\xE3\\x2C\\x64\\x59\\x9C\\x38\\x84\\xAE\\x3E\\x46\\x3C\\xBE\\xE1\\x60\\xCA\\x31\\xCE\\xD0\\x7E\\xA6\\xBC\\xB8\\x9C\\xB7\\x29\\x9B\\x94\\xDC\\x43\\xE7\\xB5\\xEE\\xE1\\x8D\\x7A\\xAB\\x45\\xE3\\xA3\\x2F\\x88\\x5B\\xA1\\x62\\xBF\\x7A\\xC4\\x4B\\x50\\xD1\\x79\\xCB\\x28\\x55\\xF2\\x85\\x59\\xA8\\x0E\\x06\\x51\\x7E\\x1A\\x17\\xCD\\xA7\\xFE\\x0C\\x82\\x59\\xC1\\x98\\xE9\\xC4\\xDA\\x27\\x68\\x98\\x1D\\x11\\xBC\\x52\\x6F\\x19\\x5C\\x74\\xC4\\x6F\\x1B\\xB9\\xE7\\x8C\\x14\\x1F\\xA8\\x9C\\xDE\\xA0\\x38\\xD1\\xB6\\x26\\xFE\\x36\\x9A\\xBA\\xC1\\x30\\xAC\\x2D\\x4F\\x92\\x87\\xCC\\xDB\\x24\\x23\\x78\\x6C\\x5D\\xAC\\xE0\\x7A\\x9A\\xFC\\xD5\\xEB\\x55\\x0B\\x92\\xA9\\x34\\x81\\xA6\\xEC\\x2F\\x46\\x6F\\xA0\\x95\\x5A\\x49\\x9A\\x71\\x0F\\x56\\x74\\x49\\x66\\xC7\\x76\\x1E\\x2C\\xEA\\x48\\x56\\xB1\\xA5\\xDA\\xDE\\xB5\\x5D\\x9C\\x06\\xA8\\xBF\\xD3\\x93\\x51\\x39\\x5C\\x81\\x23\\x50\\x88\\x72\\x42\\xBD\\x60\\xDD\\x18\\x43\\x00\\x3D\\x76\\xFC\\x98\\x78\\x9B\\x2B\\x77\\xEE\\xF1\\xA8\\x36\\x8B\\xC9\\xD9\\x9B\\xA1\\x56\\x8A\\x50\\xAA\\x26\\x19\\x25\\x7E\\xE6\\xE8\\x3B\\x52\\x20\\xF2\\x47\\xF4\\x08\\xD7\\xB5\\x50\\xCD\\x3B\\x1C\\x7C\\x8B\\xC6\\x78\\x66\\x52\\x90\\x35\\x09\\xBC\\xB1\\x9F\\x38\\x3B\\xB9\\x4E\\x19\\xD5\\xF9\\x66\\x32\\x39\\xD7\\x07\\xDC\\x7A\\x7B\\x20\\x47\\x97\\xC3\\x87\\x5F\\xCC\\xE8\\xB3\\x90\\x13\\x36\\x9B\\x72\\xA1\\xBC\\x87\\xC5\\x79\\x97\\xE5\\x0D\\x7D\\x28\\xB1\\x54\\x4E\\xD7\\x35\\x93\\xAB\\xDC\\x26\\x7F\\x24\\x58\\xDC\\x58\\xF2\\x08\\xB1\\xDE\\x79\\x0B\\xAC\\x71\\xDF\\x6D\\xA0\\xE8\\x42\\xDA\\xE8\\xC9\\x3C\\x7C\\x43\\x50\\xD1\\xF1\\xCA\\xAE\\x04\\xBA\\x4E\\xFD\\xBF\\xD1\\x54\\xF3\\xDA\\xA0\\xAB\\x0C\\xCB\\xEA\\xF8\\x52\\x5C\\xEA\\xA9\\xBD\\x27\\x5A\\xCF\\x36\\x2F\\xB9\\x43\\xF5\\x5D\\x2F\\xB9\\xB9\\xF3\\x51\\x94\\x79\\x83\\x37\\x3D\\x9A\\x87\\xC3\\x3C\\x22\\x0A\\x34\\xB3\\x07\\xF3\\xB7\\xEA\\x6F\\xE7\\x0F\\x9E\\xC4\\x4C\\xBC\\x86\\x0D\\x19\\x1B\\xCE\\xE5\\x4B\\x2D\\xD3\\x95\\xE8\\xDB\\xA7\\xFE\\x61\\x12\\xBB\\xAC\\x77\\x0F\\x02\\x6F\\x3D\\x05\\xC7\\x94\\x38\\x71\\xBA\\x0B\\xEE\\x69\\x6B\\x6E\\x31\\x04\\xB2\\x60\\xCE\\x74\\xE5\\xAF\\xD9\\xC0\\xC6\\xBA\\x9A\\x40\\x29\\xA1\\xF3\\x8E\\x47\\xB9\\xF9\\x06\\x52\\x40\\xA8\\x7E\\xE9\\xF9\\x6E\\x32\\x09\\xD5\\x27\\x70\\xAD\\x9F\\x84\\x31\\x4C\\x6F\\x16\\xD6\\xE2\\x0F\\x0F\\xC3\\x41\\x7A\\xCE\\x1C\\x96\\xE8\\x52\\x82\\xFC\\x36\\x1B\\x74\\x6C\\x5F\\x23\\x42\\x4F\\xE6\\x6D\\x91\\x6B\\xA7\\x0F\\xD5\\xFE\\x92\\x82\\xE7\\x2E\\xB3\\x0D\\x20\\x30\\x95\\x04\\xBE\\x93\\xF1\\x9C\\xB6\\x97\\xD5\\x86\\x3F\\xEF\\xF3\\xFD\\x12\\x7D\\xD7\\x9A\\x4C\\xE7\\xA6\\x82\\x47\\x22\\x9E\\x1D\\x7F\\xC1\\x41\\xF4\\x8A\\x8D\\xBC\\x1D\\x50\\xF5\\xB6\\x84\\xDB\\x0A\\x70\\xE3\\x4B\\xFC\\x36\\x91\\x49\\x58\\x57\\x90\\x14\\xDA\\xCC\\x06\\x73\\x8F\\x1C\\xD2\\xB7\\xE3\\x9E\\x96\\x93\\xA2\\x48\\x13\\x79\\x53\\x29\\xE1\\x53\\x10\\x5C\\xE0\\x5C\\xA5\\x4B\\xB7\\x8B\\xD3\\xB7\\x69\\x84\\x3A\\xB0\\x72\\xF7\\x35\\x7A\\xEC\\xE9\\x97\\x27\\xC0\\x72\\xA8\\x1A\\x40\\x55\\x4E\\x62\\x7C\\x37\\x16\\x28\\xFC\\xA0\\x2F\\x39\\x72\\x60\\x77\\xCC\\x30\\x1B\\x45\\x9D\\x56\\x5C\\xB9\\x5C\\xF6\\xB8\\xC3\\x63\\xA1\\x1B\\xAF\\x66\\x09\\x03\\x52\\xC0\\x78\\x4F\\xE2\\xAC\\xDB\\xF8\\x50\\x24\\x38\\x31\\xEC\\x19\\xCF\\x49\\x79\\x59\\xD3\\xF3\\x48\\x46\\x9F\\xD3\\xAA\\x9B\\x9A\\x8A\\xF2\\xD5\\x06\\x4D\\x9E\\xC5\\xCD\\x4C\\xA3\\xC7\\x1F\\xE7\\x3C";
  //  private String cmd_01F0 = "\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\xDD\\x34\\x09\\x44\\x46\\xD7\\x06\\xB3\\x72\\xDE\\x42\\xF5\\xA5\\xD8\\xF2\\xB4\\x1A\\xAB\\x42\\x42\\x89\\x68\\x12\\x70\\x7B\\xE6\\x33\\xEE\\x2E\\x2C\\xDE\\xCA\\x17\\x0F\\x20\\xB1\\x5B\\xA9\\xD1\\x1C\\x9E\\x9C\\xC2\\x7D\\x88\\x36\\xBC\\xC3\\x1F\\x87\\x99\\x57\\x70\\x4C\\x74\\x12\\xCE\\x59\\x87\\x8C\\x32\\x3D\\xFC\\xFA\\x53\\x2B\\x50\\x6C\\x74\\x5E\\x10\\xF2\\xE5\\x49\\xDE\\xDE\\x0A\\x30\\xA0\\x31\\x35\\xFC\\xDC\\xE8\\xDA\\x19\\xB0\\x73\\xF1\\x17\\xB8\\x3F\\xF3\\x9E\\x35\\xDD\\xE2\\x65\\xD1\\x19\\x19\\x10\\xCE\\x52\\x74\\x15\\x55\\x01\\xC5\\x6F\\x0D\\xAA\\xEF\\x38\\x4C\\xAF\\x9E\\x95\\x62\\x77\\x0D\\x84\\xE9\\x78\\xD0\\xD2\\x49\\x97\\x1E\\x0A\\xD5\\x6F\\x95\\x8F\\x21\\x66\\xA2\\x82\\xD3\\xAC\\xF2\\xB3\\xA5\\x5B\\x10\\x18\\x32\\x13\\x69\\xA8\\xCB\\x39\\xCE\\xE1\\xBA\\x70\\x6D\\x59\\xDB\\xA2\\xD5\\x94\\x85\\x95\\xB5\\xC3\\x83\\xAE\\x91\\x56\\x7F\\xA3\\x6A\\x44\\xF1\\x96\\x26\\xB2\\xE8\\x31\\xD8\\x04\\xDC\\x4F\\xDB\\x85\\x61\\x9D\\xA9\\x4B\\x8C\\x95\\xF3\\x6F\\x4C\\x92\\x6F\\x31\\x39\\xF7\\x1B\\x44\\x55\\x8B\\x2C\\x3E\\x79\\xA7\\x0D\\x2B\\x30\\x22\\x3B\\x86\\x15\\x65\\xB1\\x02\\x3D\\x81\\x08\\x15\\x18\\xF0\\x14\\x88\\x1D\\xCF\\xAA\\xCD\\xC9\\x4A\\x6A\\xE4\\xD1\\x02\\xED\\x1C\\x7F\\x40\\x50\\x01\\x1E\\xBA\\x71\\xA6\\xC3\\xB5\\xAF\\xA8\\x69\\x91\\x69\\x13\\xE7\\x84\\x0B\\x6F\\xD4\\xD7\\xA7\\xF3\\x32\\xFC\\xC3\\x54\\xBD\\x47\\x69\\x11\\x6F\\xDE\\x04\\x20\\x8C\\x59\\xA5\\x5F\\x3B\\xE5\\xBD\\x42\\x42\\xE4\\xF8\\xF0\\x1D\\x94\\x00\\xF5\\x5B\\x34\\x41\\x81\\x43\\x3E\\xC2\\xC8\\xD5\\xAC\\x9C\\xCE\\xB6\\xC0\\x83\\xC9\\xFA\\xCA\\x56\\x46\\xC4\\x5A\\x99\\xFF\\xD5\\x3B\\xBA\\x7B\\x4D\\x0B\\x4D\\x7A\\xF4\\xFB\\x97\\x83\\xF5\\x69\\xD2\\x75\\x4E\\x3E\\x4F\\x20\\xA3\\xDB\\x91\\x33\\xB9\\x05\\xF9\\xA4\\xB5\\x76\\x80\\x2C\\x54\\xA7\\x7D\\x55\\x41\\x30\\x6C\\xD9\\x7B\\x12\\xE6\\x88\\x5B\\x2B\\x5F\\x8B\\x72\\x77\\x1D\\xC5\\xFB\\x12\\x29\\xCC\\xEE\\x2F\\xE7\\x44\\xA4\\x1A\\x72\\xDD\\xA5\\xA7\\x0F\\xF5\\x1B\\x3B\\x62\\x40\\xD5\\x8C\\xAF\\xCA\\xCE\\x4A\\xF5\\x96\\xF8\\x28\\x85\\x1F\\x10\\x85\\xA2\\x8E\\xB4\\x0A\\xCB\\x8C\\x93\\x7B\\x9A\\x7D\\xC4\\x1E\\xC1\\x3C\\x5F\\x12\\xA7\\xC1\\xBF\\xC0\\x9D\\xDD\\x76\\x50\\x39\\x22\\x74\\x64\\xEC\\x80\\xA6\\x17\\x6F\\x40\\xC8\\x24\\xD0\\xE4\\x9F\\x8B\\x8E\\x8C\\x3F\\x6C\\xC1\\x4E\\x90\\x73\\x05\\x45\\x2B\\x50\\x01\\xE4\\xBC\\x7D\\x1D\\x03\\x8F\\x6B\\xC4\\x67\\x6F\\x29\\x18\\xF8\\x14\\xB8\\x1F\\xEF\\x06\\x1A\\x2D\\xEE\\x1C\\x3F\\x7D\\x93\\x64\\x32\\x98\\xFC\\x03\\x53\\x52\\xEF\\x1F\\x91\\x97\\x60\\xE8\\x2D\\xC8\\x6F\\x10\\x02\\x90\\x16\\x1D\\x6E\\xE5\\x8F\\xA5\\x33\\x49\\xD5\\x69\\x8E\\x77\\x19\\xD6\\xCD\\xD4\\x62\\xFA\\x69\\x12\\xF1\\x6A\\x13\\xA7\\xD9\\xE3\\x97\\x4D\\x8A\\x0E\\x23\\x92\\x2A\\x42\\x59\\x7D\\x64\\xA3\\x62\\x5F\\xF2\\x78\\x55\\x9A\\xE5\\x10\\xD5\\x57\\x9F\\x05\\x8F\\xAC\\x2F\\x54\\xEF\\x98\\x77\\xFF\\xD2\\xFF\\x17\\xC7\\xA8\\xC2\\xD9\\xF1\\x7F\\x8C\\xD2\\x3A\\xAA\\x68\\xFB\\xD8\\x79\\x65\\xD1\\x62\\x44\\xFE\\x71\\x20\\x9B\\xE5\\x06\\xC6\\x5F\\x2B\\x5D\\x3F\\x9A\\x26\\xE8\\x38\\xAD\\x22\\xA0\\x8C\\xD1\\xF3\\x14\\x85\\x1D\\xE3\\x88\\x3D\\x56\\xCF\\x9C\\x00\\x11\\x5D\\x28\\xEC\\x13\\x7B\\x6F\\x5F\\x16\\xE2\\xEA\\xC0\\x67\\xFB\\xA7\\x74\\x56\\xCE\\x22\\x4E\\x03\\xBE\\x84\\xF8\\x5B\\x87\\xF3\\x05\\xF6\\x05\\x48\\x85\\x46\\x93\\x0D\\xB1\\xEA\\xD3\\x5C\\x75\\x33\\x7F\\x59\\x95\\x3F\\x1C\\x2E\\xE6\\x80\\x5B\\x1B\\x5D\\xAB\\xDE\\xA0\\xD1\\x42\\xEC\\x09\\x83\\x09\\x6E\\x01\\x20\\xD9\\xF6\\x50\\x2E\\x9C\\x6B\\x58\\x3F\\x0D\\x44\\x5E\\xE1\\x3F\\xBE\\x91\\xC2\\xF8\\xD2\\x60\\x57\\xEE\\x71\\xAE\\x8E\\x3F\\xBA\\xF7\\x74\\x53\\x0B\\x42\\xC3\\x4E\\x7F\\x34\\x20\\xC7\\xA9\\x77\\xDF\\x8A\\x39\\x4B\\x08\\xA5\\x4B\\x11\\x53\\x0B\\x34\\xFC\\x15\\x32\\xBE\\x82\\x37\\x45\\x88\\x98\\x80\\xD3\\x26\\xB1\\x3B\\x5B\\x3C\\xCB\\x40\\x45\\x2B\\x65\\x96\\x40\\xC7\\x3F\\xAE\\x6D\\xD6\\x8B\\xCE\\x17\\x11\\xEE\\x65\\xBE\\x25\\x68\\x53\\xF5\\x41\\x27\\xF7\\x34\\x18\\x56\\x56\\x6F\\xB7\\xB3\\x50\\x6C\\x42\\xFD\\xE1\\x4C\\xF0\\xC5\\x6A\\xAA\\xC2\\xB3\\xB1\\xCB\\xCD\\x9B\\x5F\\x6F\\x81\\x7C\\x70\\xD8\\x72\\xEB\\xBB\\x5D\\x08\\x98\\xE0\\xF4\\x58\\xAC\\x8C\\x37\\x53\\x75\\x39\\x2B\\x75\\x63\\x2B\\x04\\x8B\\x8A\\xE2\\xE0\\xE6\\x51\\x4C\\xC3\\xAC\\x24\\xA4\\x3B\\xD5\\x60\\x6F\\xCA\\x06\\x24\\xD5\\x2F\\x39\\x0F\\x30\\xBC\\xC6\\x4C\\x22\\xC5\\x1F\\x1B\\x95\\x8F\\x04\\x31\\xA8\\x0A\\x00\\x25\\xF1\\x36\\x9A\\x6E\\x95\\x8A\\x0F\\x7E\\xD3\\x9C\\x28\\x17\\xC5\\x9D\\x7F\\x8E\\xBB\\x6D\\xDE\\x97\\x46\\xE3\\x2C\\x64\\x59\\x9C\\x38\\x84\\xAE\\x3E\\x46\\x3C\\xBE\\xE1\\x60\\xCA\\x31\\xCE\\xD0\\x7E\\xA6\\xBC\\xB8\\x9C\\xB7\\x29\\x9B\\x94\\xDC\\x43\\xE7\\xB5\\xEE\\xE1\\x8D\\x7A\\xAB\\x45\\xE3\\xA3\\x2F\\x88\\x5B\\xA1\\x62\\xBF\\x7A\\xC4\\x4B\\x50\\xD1\\x79\\xCB\\x28\\x55\\xF2\\x85\\x59\\xA8\\x0E\\x06\\x51\\x7E\\x1A\\x17\\xCD\\xA7\\xFE\\x0C\\x82\\x59\\xC1\\x98\\xE9\\xC4\\xDA\\x27\\x68\\x98\\x1D\\x11\\xBC\\x52\\x6F\\x19\\x5C\\x74\\xC4\\x6F\\x1B\\xB9\\xE7\\x8C\\x14\\x1F\\xA8\\x9C\\xDE\\xA0\\x38\\xD1\\xB6\\x26\\xFE\\x36\\x9A\\xBA\\xC1\\x30\\xAC\\x2D\\x4F\\x92\\x87\\xCC\\xDB\\x24\\x23\\x78\\x6C\\x5D\\xAC\\xE0\\x7A\\x9A\\xFC\\xD5\\xEB\\x55\\x0B\\x92\\xA9\\x34\\x81\\xA6\\xEC\\x2F\\x46\\x6F\\xA0\\x95\\x5A\\x49\\x9A\\x71\\x0F\\x56\\x74\\x49\\x66\\xC7\\x76\\x1E\\x2C\\xEA\\x48\\x56\\xB1\\xA5\\xDA\\xDE\\xB5\\x5D\\x9C\\x06\\xA8\\xBF\\xD3\\x93\\x51\\x39\\x5C\\x81\\x23\\x50\\x88\\x72\\x42\\xBD\\x60\\xDD\\x18\\x43\\x00\\x3D\\x76\\xFC\\x98\\x78\\x9B\\x2B\\x77\\xEE\\xF1\\xA8\\x36\\x8B\\xC9\\xD9\\x9B\\xA1\\x56\\x8A\\x50\\xAA\\x26\\x19\\x25\\x7E\\xE6\\xE8\\x3B\\x52\\x20\\xF2\\x47\\xF4\\x08\\xD7\\xB5\\x50\\xCD\\x3B\\x1C\\x55\\xAA\\xE6\\xB0\\x62\\x26\\x31\\x35\\x90\\xB5\\x69\\x96\\xB8\\x3C\\xE7\\x44\\x59\\x7D\\xEB\\xA6\\x17\\x9B\\xC5\\x33\\x56\\x7B\\x79\\x21\\xC5\\x97\\xF3\\x87\\xDF\\xEE\\xA9\\x12\\xB8\\xD0\\x3F\\x8F\\xC1\\x8B\\xB6\\x87\\x49\\x73\\x97\\xE5\\x89\\x6F\\x28\\xA9\\xF4\\x46\\xFC\\x94\\xB3\\x13\\x9A\\xA2\\xD7\\xE6\\xE8\\xC4\\x86\\xE3\\x1C\\xA5\\xD4\\x6B\\x4D\\x89\\x69\\x5B\\x6B\\x03\\x62\\x76\\xEE\\xE9\\xCA\\x3D\\xFC\\x22\\x4B\\xD3\\x25\\x48\\xAF\\x85\\xB3\\x56\\xFD\\xBF\\x63\\x5E\\xEB\\xDC\\x27\\xA1\\xAC\\xEC\\x58\\xF8\\x66\\x6A\\xEA\\xA8\\xBD\\x27\\x5A\\xCF\\x36\\x2F\\xB9\\x43\\xF5\\x5D\\x2F\\xB9\\xB9\\xF3\\x51\\x94\\x79\\x83\\x37\\x3D\\x9A\\x87\\xC3\\x3C\\x22\\x0A\\x34\\xB3\\x07\\xF3\\xB7\\xEA\\x6F\\xE7\\x0F\\x9E\\xC4\\x4C\\xBC\\x86\\x0D\\x19\\x1B\\xCE\\xE5\\x4B\\x2D\\xD3\\x95\\xE8\\xDB\\xA7\\xFE\\x61\\x12\\xBB\\xAC\\x77\\x0F\\x02\\x6F\\x3D\\x05\\xC7\\x94\\x38\\x71\\xBA\\x0B\\xEE\\x69\\x6B\\x6E\\x31\\x04\\xB2\\x60\\xCE\\x74\\xE5\\xAF\\xD9\\xC0\\xC6\\xBA\\x9A\\x40\\x29\\xA1\\xF3\\x8E\\x47\\xB9\\xF9\\x06\\x52\\x40\\xA8\\x7E\\xE9\\xF9\\x6E\\x32\\x09\\xD5\\x27\\x70\\xAD\\x9F\\x84\\x31\\x4C\\x6F\\x16\\xD6\\xE2\\x0F\\x0F\\xC3\\x41\\x7A\\xCE\\x1C\\x96\\xE8\\x52\\x82\\xFC\\x36\\x1B\\x74\\x6C\\x5F\\x23\\x42\\x4F\\xE6\\x6D\\x91\\x6B\\xA7\\x0F\\xD5\\xFE\\x92\\x82\\xE7\\x2E\\xB3\\x0D\\x20\\x30\\x95\\x04\\xBE\\x93\\xF1\\x9C\\xB6\\x97\\xD5\\x86\\x3F\\xEF\\xF3\\xFD\\x12\\x7D\\xD7\\x9A\\x4C\\xE7\\xA6\\x82\\x47\\x22\\x9E\\x1D\\x7F\\xC1\\x41\\xF4\\x8A\\x8D\\xBC\\x1D\\x50\\xF5\\xB6\\x84\\xDB\\x0A\\x70\\xE3\\x4B\\xFC\\x36\\x91\\x49\\x58\\x57\\x90\\x14\\xDA\\xCC\\x06\\x73\\x8F\\x1C\\xD2\\xB7\\xE3\\x9E\\x96\\x93\\xA2\\x48\\xA1\\x18\\x70\\x69\\x11\\x7B\\x51\\xDC\\xF9\\x92\\xB4\\xCB\\xB7\\xAB\\xCB\\xB1\\xEF\\x8E\\x98\\xB4\\x71\\x6F\\x01\\x7A\\xED\\xEB\\x96\\x15\\x81\\x79\\xA8\\x4E\\x49\\xD7\\xCF\\x6B\\xA4\\x3E\\x92\\x3B\\xBA\\xBA\\x29\\x14\\x7A\\x44\\x72\\xEB\\xA8\\x37\\x67\\x9C\\x56\\x75\\x98\\x3D\\xD6\\xF8\\x33\\x48\\x62\\x22\\x9A\\x36\\x00\\x13\\x55\\xBE\\x6A\\x49\\x4A\\xB4\\xD9\\xFF\\xD3\\xAE\\x00\\xA5\\xEC\\x1B\\xC6\\x5B\\x59\\x6B\\x91\\x23\\xE8\\xC4\\x1E\\xFE\\xA4\\x9B\\x1A\\x38\\xB4\\xDF\\x46\\xEF\\x8C\\x21\\xEE\\xF9\\xB1\\xEB\\x3B\\x46\\x34";
    /**
     *
     * @param address
     * @param status  true on | false off
     * @param colorIndex
     */
    private boolean xmitCmd(int address, boolean status, int colorIndex){

    //Generating cmd
    // |------------1 byte-----------|-------------1 byte -------------|
    //     address 0 - 255           |     2 bits  |      6 bits       |
    //           0: broadcast          00:OFF 11:ON      colorIndex
    int firstByte = address;
    int secondByte = (status? 3:0)  << 6 | ( 0x3F & colorIndex);

    Log.d("xmitCmd","addr:" + address + " st: " + status + " color: " + colorIndex);
    File sdcardPath = Environment.getExternalStorageDirectory();
    File filepath = this.getExternalFilesDir("webee/payload/payload.txt" + address);
    File payloadFile = new File(sdcardPath, "webee/payload/payload.txt" + address);
    String cmdstring;
    try {
        long offset = 6 + ((1537 * 4) + 2) * secondByte;
        FileReader fileReader = new FileReader(payloadFile);

        char[] content = new char[1537 *4];
        //bufferedReader.read(content,0 , 1537 *4);
        fileReader.skip(offset);
        fileReader.read(content, 0, 1537*4);
        fileReader.close();
        cmdstring = new String(content);
        Log.d("xmitCmd",cmdstring);

    }catch (FileNotFoundException e){
//            Toast.makeText(this, "xmitCmd: File not found", Toast.LENGTH_SHORT).show();
        e.printStackTrace();
        return false;
    }catch (IOException e){
        //          Toast.makeText(this, "xmdCmd: IO exception", Toast.LENGTH_SHORT).show();
        e.printStackTrace();
        return false;
    }

    try {
//            //enable wlan inteface
//            String[] cmd_interface_up = {"su", "-c", "ifconfig wlan0 up && iwconfig wlan0 channel 11 && chmod 777 /mnt/aireplay-ng-color"};
//            Process process = Runtime.getRuntime().exec(cmd_interface_up);
//
//            process.getInputStream().close();
//            process.getOutputStream().close();
//            process.getErrorStream().close();
//            process.waitFor();
//            process.destroy();

        //switch to channel
            /*String[] cmd_set_channel = {"su", "-c", "iwconfig wlan0 channel 11"};
            process = Runtime.getRuntime().exec(cmd_interface_up);
            process.getInputStream().close();
            process.getOutputStream().close();
            process.getErrorStream().close();
            process.waitFor();
            process.destroy();

            //Just in case
            String[] cmd_chmod = {"su", "-c", "chmod 777 /mnt/aireplay-ng-color"};
            process = Runtime.getRuntime().exec(cmd_chmod);
            process.waitFor();
            process.destroy();
*/
        //start transmission
        String cmd_aireplay = "LD_PRELOAD=libfakeioctl.so /mnt/aireplay-ng-color -I " + cmdstring + " -L 1537 -9 wlan0";
        String[] commands = {"su", "-c", cmd_aireplay};
        Process process = Runtime.getRuntime().exec(commands);
        process = Runtime.getRuntime().exec(commands);
//            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(process.getInputStream()));
//            String line = null;
//            while ((line = bufferedReader.readLine()) != null) {
//                System.out.println(line);
//            }
        process.getInputStream().close();
        process.getOutputStream().close();
        process.getErrorStream().close();
        process.waitFor();
        process.destroy();

    } catch (Exception e) {
        e.printStackTrace();
        return  false;
    }
    return  true;

}
    private  boolean xmitCmd(int address, int secondByte){

        //Generating cmd
        // |------------1 byte-----------|-------------1 byte -------------|
        //     address 0 - 255           |     2 bits  |      6 bits       |
        //           0: broadcast          00:OFF 11:ON      colorIndex
        int firstByte = address;
        //int secondByte = (status? 3:0)  << 6 | ( 0x3F & colorIndex);

        Log.d("xmitCmd","addr:" + address +  " second: " + secondByte);
        File sdcardPath = Environment.getExternalStorageDirectory();
        File filepath = this.getExternalFilesDir("webee/payload/payload"+ address + ".txt" );
        File payloadFile = new File(sdcardPath, "webee/payload/payload" + address + ".txt");
        String cmdstring;
        try {
            long offset = 6 + ((1537 * 4) + 2) * secondByte;
            FileReader fileReader = new FileReader(payloadFile);

            char[] content = new char[1537 *4];
            //bufferedReader.read(content,0 , 1537 *4);
            fileReader.skip(offset);
            fileReader.read(content, 0, 1537*4);
            fileReader.close();
            cmdstring = new String(content);
            Log.d("xmitCmd",cmdstring);

        }catch (FileNotFoundException e){
//            Toast.makeText(this, "xmitCmd: File not found", Toast.LENGTH_SHORT).show();
            e.printStackTrace();
            return false;
        }catch (IOException e){
            //          Toast.makeText(this, "xmdCmd: IO exception", Toast.LENGTH_SHORT).show();
            e.printStackTrace();
            return false;
        }

        try {
            //start transmission
            String cmd_aireplay = "LD_PRELOAD=libfakeioctl.so /mnt/aireplay-ng-color -I " + cmdstring + " -L 1537 -9 wlan0";
            String[] commands = {"su", "-c", cmd_aireplay};
            Process process = Runtime.getRuntime().exec(commands);
            process = Runtime.getRuntime().exec(commands);
//            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(process.getInputStream()));
//            String line = null;
//            while ((line = bufferedReader.readLine()) != null) {
//                System.out.println(line);
//            }
            process.getInputStream().close();
            process.getOutputStream().close();
            process.getErrorStream().close();
            process.waitFor();
            process.destroy();

        } catch (Exception e) {
            e.printStackTrace();
            return  false;
        }
        return  true;

    }

    private void xmitCmd(int colorIndex){

        try {
            //enable wlan inteface
            String[] cmd_interface_up = {"su", "-c", "ifconfig wlan0 up && iwconfig wlan0 channel 11 && chmod 777 /mnt/aireplay-ng-color-old"};
            Process process = Runtime.getRuntime().exec(cmd_interface_up);
            process.getInputStream().close();
            process.getOutputStream().close();
            process.getErrorStream().close();
            process.waitFor();
            process.destroy();

//            //        System.out.println("------------------------------------------------");
//
//            //switch to channel
//            String[] cmd_set_channel = {"su", "-c", "iwconfig wlan0 channel 11"};
//            process = Runtime.getRuntime().exec(cmd_interface_up);
//
//            process.getInputStream().close();
//            process.getOutputStream().close();
//            process.getErrorStream().close();
//            process.waitFor();
//            process.destroy();
//            //    System.out.println("------------------------------------------------");
//
//            //Just in case
//            String[] cmd_chmod = {"su", "-c", "chmod 777 /mnt/aireplay-ng-color-old"};
//            Runtime.getRuntime().exec(cmd_chmod);

            //start transmission
            String cmd_aireplay = "LD_PRELOAD=libfakeioctl.so /mnt/aireplay-ng-color-old -I " + colorIndex + " -9 wlan0";
            String[] commands = {"su", "-c", cmd_aireplay};
            process = Runtime.getRuntime().exec(commands);
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line = null;
            while ((line = bufferedReader.readLine()) != null) {
                System.out.println(line);
            }
            process.getInputStream().close();
            process.getOutputStream().close();
            process.getErrorStream().close();
            process.waitFor();
            process.destroy();

            //        System.out.println("------------------------------------------------");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
